version: '3.4'

x-common: &common
  image: app-service:latest
  labels:
    com.app: app
  networks:
    - app
  volumes: &volumes
    - .:/app:delegated
    - build:/app/build/:ro
    - ./node_modules:/app/node_modules/
    - ./config:/app/build/config/
    - node_dev:/usr/local/lib/node_modules/node-dev/:ro

services:
  builder:
    volumes:
      - .:/app:delegated
      - build:/app/build/
      - ./node_modules:/app/node_modules/
      - ./config:/app/build/config/
    <<: *common
    image: app:latest
    container_name: app-builder
    command: [sh, -c, 'node build/tools/build.js && ./node_modules/.bin/tsc -w --pretty --skipLibCheck']

  base:
    labels:
      com.app: app
    networks:
      - app
    volumes:
      - .:/app:delegated
      - ./node_modules:/app/node_modules/
      - ./config:/app/build/config/
    image: app:latest
    container_name: app-base
    command: ['tail', '-f', '/dev/null']

  js:
    image: app:latest
    volumes: *volumes
    depends_on:
      - base
    networks:
      - app

  messaging-db:
    image: postgres:10-alpine
    environment:
      POSTGRES_DB: messaging
      POSTGRES_USER: messaging
      POSTGRES_PASSWORD: password
    networks:
      - app   

  gateway:
    <<: *common
    working_dir: /app/build
    container_name: gateway
    command: [sh, -c, 'node-dev ./services/gateway/src/index.js --configKey gateway']
    hostname: gateway  
    depends_on:
      - base
      - messaging

  messaging:
    <<: *common
    working_dir: /app/build
    container_name: messaging
    command: [sh, -c, 'node-dev ./services/messaging/src/index.js --configKey messaging']
    hostname: messaging 
    depends_on:
      - messaging-db

  integration-tests:
    <<: *common
    working_dir: /app/build
    command:
      [sh, -c, 'npm run integration-tests']
    depends_on:
      - gateway  

networks:
  app:

volumes:
  build:
  node_dev:
